#! /bin/bash

function versioninfo
{
	VERSION="$Revision$"
	VERSION="${VERSION%\ \$}"; VERSION="${VERSION#\:}"; VERSION="${VERSION##\ }"
	VERSION="(CVS revision $VERSION)"
	
	NAME="$Name$"
	NAME="${NAME%\ \$}"; NAME="${NAME#\:}"; NAME="${NAME##\ }"; NAME="${NAME##release-}"; NAME="${NAME//-/.}"
	[[ -n $NAME ]] && NAME="Version $NAME "

	echo ${CMDNAME}
	echo ${NAME}${VERSION}

	echo -e "\nCopyright (C) 2010 Hacking Network Solutions"
	echo "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
	echo "This is free software: you are free to change and redistribute it."
	echo "There is NO WARRANTY, to the extent permitted by law."
}

function helpscreen
{
	echo "Usage: ${CMDNAME} [OPTION]..."
	echo "Automatically deletes updated configuration files for those files listed"
	echo "then unconditionally merges remaining configuration files"
	echo
	echo "  -f \"FILES\", --files \"FILES\"    use the file list specified in FILES"
	echo "                                 instead of the configuration file"
	echo "      --help                     display this help and exit"
    echo "      --version                  output version information and exit"
}

# Init local vars
CFGFILE=/etc/buildspace
CMDNAME=$(basename ${0})

# Process command line switches
while [[ $# -gt 0 ]]
do
	case $1 in
		-f|--files)
			CONFFILES=$2
			shift 2
	    ;;
				
		--version)
			versioninfo
			exit
		*)
			helpscreen
			shift 1
			exit
		;;
	esac
done

# If the config file exists and we can read it do so
[[ ! -r ${CFGFILE} && -z ${CONFFILES} ]] && echo "Error: No config file (or no read permissions) at ${CFGFILE}" >&2 && exit 2
source ${CFGFILE}

# Check config
[[ -z ${CONFFILES} ]] && echo "Error: You have no CONFFILES set in ${CFGFILE} and none were specified" >&2 && exit 2	

# Loop through the files above searching for any configuration files which
# match.  If any are found for that file display them and delete them.
echo "Searching for new configurations for:"
for F in ${CONFFILES}; do
	echo -n "    ${F} : "
	FTD=$(find /etc -name "._cfg*${F}*" | xargs -r)
	if [[ -z ${FTD} ]]; then
		echo "none."
	else
		echo ${FTD}
		rm -f ${FTD}
	fi
done
echo

# Now that we have removed any configuration files we do not want we can
# use etc-update to complete the job.
echo -e "-5\n" | etc-update
